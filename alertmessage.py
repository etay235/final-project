#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    May 30, 2020 01:11:18 AM +0300  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import alertmessage_support


def vp_start_gui(main_client):
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = alertpage(root)
    alertmessage_support.init(root, top, main_client)
    root.mainloop()


w = None


def create_alertpage(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_alertpage(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = alertpage (w)
    alertmessage_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_alertpage():
    global w
    w.destroy()
    w = None


class alertpage:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("285x129+461+176")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("Stop Connection")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.14, rely=0.233, height=15, width=214)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(cursor="fleur")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Do you want to close the connection?''')

        self.no_button = tk.Button(top)
        self.no_button.place(relx=0.491, rely=0.62, height=24, width=37)
        self.no_button.configure(activebackground="#ececec")
        self.no_button.configure(activeforeground="#000000")
        self.no_button.configure(background="#d9d9d9")
        self.no_button.configure(cursor="hand2")
        self.no_button.configure(disabledforeground="#a3a3a3")
        self.no_button.configure(foreground="#000000")
        self.no_button.configure(highlightbackground="#d9d9d9")
        self.no_button.configure(highlightcolor="black")
        self.no_button.configure(pady="0")
        self.no_button.configure(text='''No''')
        self.no_button.configure(command=alertmessage_support.no_click)

        self.yes_butoon = tk.Button(top)
        self.yes_butoon.place(relx=0.702, rely=0.62, height=24, width=39)
        self.yes_butoon.configure(activebackground="#ececec")
        self.yes_butoon.configure(activeforeground="#000000")
        self.yes_butoon.configure(background="#d9d9d9")
        self.yes_butoon.configure(disabledforeground="#a3a3a3")
        self.yes_butoon.configure(foreground="#000000")
        self.yes_butoon.configure(cursor="hand2")
        self.yes_butoon.configure(highlightbackground="#d9d9d9")
        self.yes_butoon.configure(highlightcolor="black")
        self.yes_butoon.configure(pady="0")
        self.yes_butoon.configure(text='''Yes''')
        self.yes_butoon.configure(command=alertmessage_support.yes_click)
