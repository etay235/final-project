#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Mar 30, 2020 11:53:17 PM +0300  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import signuppage_support
import client


def vp_start_gui(main_client):
    """Starting point when module is the main routine."""
    global val, w, root
    root = tk.Tk()
    top = signuppage(root)
    signuppage_support.init(root, top, main_client)
    root.protocol("WM_DELETE_WINDOW", signuppage_support.on_closing)
    root.mainloop()


w = None


def create_signuppage(rt, *args, **kwargs):
    """Starting point when module is imported by another module.
       Correct form of call: 'create_signuppage(root, *args, **kwargs)' ."""
    global w, w_win, root
    # rt = root
    root = rt
    w = tk.Toplevel(root)
    top = signuppage(w)
    signuppage_support.init(w, top, *args, **kwargs)
    return w, top


def destroy_signuppage():
    global w
    w.destroy()
    w = None


def failed_signup(user, eml):
    signuppage_support.failed_signup(user, eml)


class signuppage:
    def check_password(self, check = True):
        if check:
            self.check_pass()
        if self.confirmoasswordtxt.get() == self.passwordtxt.get():
            self.confirmoasswordtxt.configure(background="white")
            self.passwordalert.place_forget()
            return True
        self.confirmoasswordtxt.configure(background="#FF8080")
        self.passwordalert.place(relx=0.29, rely=0.422, height=21, width=244)
        return False

    def show_user_alert(self, user, eml):
        if user:
            # self.usernametxt.delete(0, -1)
            self.usernamealert.place(relx=0.29, rely=0.2, height=21, width=244)
        else:
            self.usernamealert.place_forget()
        if eml:
            # self.emailtxt.delete(0, -1)
            self.emailalert.place(relx=0.29, rely=0.533, height=21, width=244)
        else:
            self.emailalert.place_forget()

    def check_user(self):
        # check if user entry is empty
        if self.usernametxt.index("end") == 0:
            self.usernametxt.configure(background="#FF8080")
            self.useremptyalert.place(relx=0.56, rely=0.2, height=21, width=93)
            return False
        self.usernametxt.configure(background="white")
        self.useremptyalert.place_forget()
        return True

    def check_pass(self):
        # check if password entry is empty
        if self.passwordtxt.index("end") == 0:
            self.passwordtxt.configure(background="#FF8080")
            self.passemptyalert.place(relx=0.56, rely=0.311, height=21, width=93)
            return False
        self.passwordtxt.configure(background="white")
        self.passemptyalert.place_forget()
        return True

    def check_email(self):
        # check if email entry is empty
        if self.emailtxt.index("end") == 0:
            self.emailtxt.configure(background="#FF8080")
            self.emailemptyalert.place(relx=0.56, rely=0.533, height=21, width=93)
            return False
        self.emailtxt.configure(background="white")
        self.emailemptyalert.place_forget()
        return True

    def sign_up(self):
        check_user = self.check_user()
        check_pass = self.check_pass()
        check_email = self.check_email()
        # check if can try sign up
        if self.check_password(False) and check_user and check_pass and check_email:
            username = self.usernametxt.get()
            password = self.passwordtxt.get()
            email = self.emailtxt.get()
            signuppage_support.sign_up(username, password, email)

    def __init__(self, top=None):
        """This class configures and populates the toplevel window.
           top is the toplevel containing window."""
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'

        top.geometry("518x450+390+137")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("Sign up")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.251, rely=0.156, height=20, width=100)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Username:''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=-0.45, rely=0.289, height=21, width=29)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Label''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.251, rely=0.267, height=20, width=100)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(cursor="")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Password:''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.232, rely=0.489, height=20, width=100)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''Email:''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.29, rely=0.378, height=20, width=100)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Confirn password:''')

        self.usernametxt = tk.Entry(top)
        self.usernametxt.place(relx=0.56, rely=0.156, height=20, relwidth=0.232)
        self.usernametxt.configure(background="white")
        self.usernametxt.configure(cursor="xterm")
        self.usernametxt.configure(disabledforeground="#a3a3a3")
        self.usernametxt.configure(font="TkFixedFont")
        self.usernametxt.configure(foreground="#000000")
        self.usernametxt.configure(insertbackground="black")
        self.usernametxt.configure(validate="focusout")
        self.usernametxt.configure(validatecommand=self.check_user)

        self.passwordtxt = tk.Entry(top)
        self.passwordtxt.place(relx=0.56, rely=0.267, height=20, relwidth=0.232)
        self.passwordtxt.configure(background="white")
        self.passwordtxt.configure(disabledforeground="#a3a3a3")
        self.passwordtxt.configure(font="TkFixedFont")
        self.passwordtxt.configure(foreground="#000000")
        self.passwordtxt.configure(highlightbackground="#d9d9d9")
        self.passwordtxt.configure(highlightcolor="black")
        self.passwordtxt.configure(insertbackground="black")
        self.passwordtxt.configure(selectbackground="#c4c4c4")
        self.passwordtxt.configure(selectforeground="black")
        self.passwordtxt.configure(show="*")
        self.passwordtxt.configure(validate="focusout")
        self.passwordtxt.configure(validatecommand=self.check_password)

        self.emailtxt = tk.Entry(top)
        self.emailtxt.place(relx=0.56, rely=0.489, height=20, relwidth=0.309)
        self.emailtxt.configure(background="white")
        self.emailtxt.configure(disabledforeground="#a3a3a3")
        self.emailtxt.configure(font="TkFixedFont")
        self.emailtxt.configure(foreground="#000000")
        self.emailtxt.configure(highlightbackground="#d9d9d9")
        self.emailtxt.configure(highlightcolor="black")
        self.emailtxt.configure(insertbackground="black")
        self.emailtxt.configure(selectbackground="#c4c4c4")
        self.emailtxt.configure(selectforeground="black")
        self.emailtxt.configure(validate="focusout")
        self.emailtxt.configure(validatecommand=self.check_email)

        self.confirmoasswordtxt = tk.Entry(top)
        self.confirmoasswordtxt.place(relx=0.56, rely=0.378, height=20, relwidth=0.232)
        self.confirmoasswordtxt.configure(background="white")
        self.confirmoasswordtxt.configure(disabledforeground="#a3a3a3")
        self.confirmoasswordtxt.configure(font="TkFixedFont")
        self.confirmoasswordtxt.configure(foreground="#000000")
        self.confirmoasswordtxt.configure(highlightbackground="#d9d9d9")
        self.confirmoasswordtxt.configure(highlightcolor="black")
        self.confirmoasswordtxt.configure(insertbackground="black")
        self.confirmoasswordtxt.configure(selectbackground="#c4c4c4")
        self.confirmoasswordtxt.configure(selectforeground="black")
        self.confirmoasswordtxt.configure(show="*")
        self.confirmoasswordtxt.configure(validate="focusout")
        self.confirmoasswordtxt.configure(validatecommand=self.check_password)

        self.signupbutton = tk.Button(top)
        self.signupbutton.place(relx=0.444, rely=0.622, height=34, width=77)
        self.signupbutton.configure(activebackground="#ececec")
        self.signupbutton.configure(activeforeground="#000000")
        self.signupbutton.configure(background="#d9d9d9")
        self.signupbutton.configure(cursor="hand2")
        self.signupbutton.configure(disabledforeground="#a3a3a3")
        self.signupbutton.configure(foreground="#000000")
        self.signupbutton.configure(highlightbackground="#d9d9d9")
        self.signupbutton.configure(highlightcolor="black")
        self.signupbutton.configure(pady="0")
        self.signupbutton.configure(text='''Create user''')
        self.signupbutton.configure(command=self.sign_up)

        self.menubar = tk.Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.loginlink = tk.Button(top)
        self.loginlink.place(relx=0.405, rely=0.778, height=24, width=120)
        self.loginlink.configure(activebackground="#ececec")
        self.loginlink.configure(activeforeground="#000000")
        self.loginlink.configure(background="#d9d9d9")
        self.loginlink.configure(cursor="hand2")
        self.loginlink.configure(disabledforeground="#a3a3a3")
        self.loginlink.configure(foreground="#000000")
        self.loginlink.configure(highlightbackground="#d9d9d9")
        self.loginlink.configure(highlightcolor="black")
        self.loginlink.configure(pady="0")
        self.loginlink.configure(relief="flat")
        self.loginlink.configure(text='''Back to login''')
        self.loginlink.configure(command=signuppage_support.open_login_page)

        self.usernamealert = tk.Label(top)
        # self.usernamealert.place(relx=0.29, rely=0.2, height=21, width=244)
        self.usernamealert.configure(activebackground="#f9f9f9")
        self.usernamealert.configure(activeforeground="black")
        self.usernamealert.configure(anchor='w')
        self.usernamealert.configure(background="#d9d9d9")
        self.usernamealert.configure(disabledforeground="#a3a3a3")
        self.usernamealert.configure(foreground="#f5010a")
        self.usernamealert.configure(highlightbackground="#d9d9d9")
        self.usernamealert.configure(highlightcolor="black")
        self.usernamealert.configure(justify='left')
        self.usernamealert.configure(text='''* username already exist''')

        self.passwordalert = tk.Label(top)
        # self.passwordalert.place(relx=0.29, rely=0.422, height=21, width=244)
        self.passwordalert.configure(activebackground="#f9f9f9")
        self.passwordalert.configure(activeforeground="black")
        self.passwordalert.configure(anchor='w')
        self.passwordalert.configure(background="#d9d9d9")
        self.passwordalert.configure(disabledforeground="#a3a3a3")
        self.passwordalert.configure(foreground="#f5010a")
        self.passwordalert.configure(highlightbackground="#d9d9d9")
        self.passwordalert.configure(highlightcolor="black")
        self.passwordalert.configure(justify='left')
        self.passwordalert.configure(text='''* passwords do not match''')

        self.emailalert = tk.Label(top)
        # self.emailalert.place(relx=0.29, rely=0.533, height=21, width=244)
        self.emailalert.configure(activebackground="#f9f9f9")
        self.emailalert.configure(activeforeground="black")
        self.emailalert.configure(anchor='w')
        self.emailalert.configure(background="#d9d9d9")
        self.emailalert.configure(disabledforeground="#a3a3a3")
        self.emailalert.configure(foreground="#f5010a")
        self.emailalert.configure(highlightbackground="#d9d9d9")
        self.emailalert.configure(highlightcolor="black")
        self.emailalert.configure(justify='left')
        self.emailalert.configure(text='''* email already exist''')

        self.useremptyalert = tk.Label(top)
        # self.useremptyalert.place(relx=0.56, rely=0.2, height=21, width=93)
        self.useremptyalert.configure(background="#d9d9d9")
        self.useremptyalert.configure(disabledforeground="#a3a3a3")
        self.useremptyalert.configure(foreground="#f5010a")
        self.useremptyalert.configure(text='''* can't be empty''')

        self.passemptyalert = tk.Label(top)
        # self.passemptyalert.place(relx=0.56, rely=0.311, height=21, width=93)
        self.passemptyalert.configure(activebackground="#f9f9f9")
        self.passemptyalert.configure(activeforeground="black")
        self.passemptyalert.configure(background="#d9d9d9")
        self.passemptyalert.configure(disabledforeground="#a3a3a3")
        self.passemptyalert.configure(foreground="#f5010a")
        self.passemptyalert.configure(highlightbackground="#d9d9d9")
        self.passemptyalert.configure(highlightcolor="black")
        self.passemptyalert.configure(text='''* can't be empty''')

        self.emailemptyalert = tk.Label(top)
        # self.emailemptyalert.place(relx=0.56, rely=0.533, height=21, width=93)
        self.emailemptyalert.configure(activebackground="#f9f9f9")
        self.emailemptyalert.configure(activeforeground="black")
        self.emailemptyalert.configure(background="#d9d9d9")
        self.emailemptyalert.configure(disabledforeground="#a3a3a3")
        self.emailemptyalert.configure(foreground="#f5010a")
        self.emailemptyalert.configure(highlightbackground="#d9d9d9")
        self.emailemptyalert.configure(highlightcolor="black")
        self.emailemptyalert.configure(text='''* can't be empty''')
